<?xml version="1.0" encoding="UTF-8"?>
<modification>
        <id>OrderPro</id>
        <version>0.7.3.2</version>
        <vqmver>2.1</vqmver>
        <author>shchs@ya.ru</author>
		
		<file name="admin/controller/common/home.php">
				<operation>
                        <search position="before"><![CDATA[$this->data['orders'][] = array(]]></search>
						<add><![CDATA[
			$action[] = array(
				'text' => 'Изменить',
				'href' => $this->url->link('sale/orderpro/edit', 'token=' . $this->session->data['token'] . '&order_id=' . $result['order_id'], 'SSL')
			);
						]]></add>
                </operation>
        </file>
		
		<!-- Список заказов -->
		<!--<file name="admin/controller/common/header.php">
				<operation>
                        <search position="after"><![CDATA[$this->data['order'] = $this->url->link('sale/order', 'token=' . $this->session->data['token'], 'SSL');]]></search>
						<add><![CDATA[$this->data['order'] = $this->url->link('sale/orderpro', 'token=' . $this->session->data['token'], 'SSL');]]></add>
                </operation>
        </file>-->
		
		<file name="admin/controller/sale/order.php">
				<!-- Список заказов -->
				<!--<operation>
                        <search position="replace" index="3"><![CDATA[$this->url->link('sale/order', 'token=' . $this->session->data['token'] . $url, 'SSL'),]]></search>
						<add><![CDATA[$this->url->link('sale/orderpro', 'token=' . $this->session->data['token'] . $url, 'SSL'),]]></add>
                </operation>-->
				<operation>
                        <search position="replace"><![CDATA[$this->data['invoice'] = $this->url->link('sale/order/invoice', 'token=' . $this->session->data['token'] . '&order_id=' . (int)$this->request->get['order_id'], 'SSL');]]></search>
						<add><![CDATA[
			if ($this->config->get('orderpro_invoice_type')) {
				$this->data['invoice'] = $this->url->link('sale/orderpro/invoice', 'token=' . $this->session->data['token'] . '&order_id=' . (int)$this->request->get['order_id'], 'SSL');
			} else {
				$this->data['invoice'] = $this->url->link('sale/order/invoice', 'token=' . $this->session->data['token'] . '&order_id=' . (int)$this->request->get['order_id'], 'SSL');
			}
						]]></add>
				</operation>
				<operation>
                        <search position="replace"><![CDATA[$this->data['invoice'] = $this->url->link('sale/order/invoice', 'token=' . $this->session->data['token'], 'SSL');]]></search>
						<add><![CDATA[
			if ($this->config->get('orderpro_invoice_type')) {
				$this->data['invoice'] = $this->url->link('sale/orderpro/invoice', 'token=' . $this->session->data['token'], 'SSL');
			} else {
				$this->data['invoice'] = $this->url->link('sale/order/invoice', 'token=' . $this->session->data['token'], 'SSL');
			}
						]]></add>
				</operation>
				<!-- Список заказов -->
				<!--<operation>
                        <search position="replace" index="2"><![CDATA[$this->data['cancel'] = $this->url->link('sale/order', 'token=' . $this->session->data['token'] . $url, 'SSL');]]></search>
						<add><![CDATA[$this->data['cancel'] = $this->url->link('sale/orderpro', 'token=' . $this->session->data['token'] . $url, 'SSL');]]></add>
                </operation>-->
				<operation>
                        <search position="replace"><![CDATA[sale/order/update]]></search>
						<add><![CDATA[sale/orderpro/edit]]></add>
                </operation>
				<operation>
                        <search position="replace"><![CDATA[$this->data['insert'] = $this->url->link('sale/order/insert', 'token=' . $this->session->data['token'], 'SSL');]]></search>
						<add><![CDATA[$this->data['insert'] = $this->url->link('sale/orderpro/edit', 'token=' . $this->session->data['token'], 'SSL');]]></add>
                </operation>
				<operation>
                        <search position="replace"><![CDATA[$this->data['delete'] = $this->url->link('sale/order/delete', 'token=' . $this->session->data['token'] . $url, 'SSL');]]></search>
						<add><![CDATA[$this->data['delete'] = $this->url->link('sale/orderpro/delete', 'token=' . $this->session->data['token'] . $url, 'SSL');]]></add>
                </operation>
        </file>
		
        <file name="admin/controller/sale/customer.php">
                <operation>
                        <search position="before" offset="1"><![CDATA[$json[] = array(]]></search>
							<add><![CDATA[
			$this->load->model('sale/orderpro');
							]]></add>
                </operation>
                <operation>
                        <search position="before"><![CDATA[$json[] = array(]]></search>
							<add><![CDATA[
				if ($this->config->get('orderpro_virtual_customer')) {
					$virtual_customer_id = $this->model_sale_orderpro->getVirtualCustomer($result['customer_group_id']);
				} else {
					$virtual_customer_id = '';
				}
							]]></add>
                </operation>
                <operation>
                        <search position="after"><![CDATA[$result['fax'],]]></search>
							<add><![CDATA['virtual_customer_id'       => $virtual_customer_id,]]></add>
                </operation>
		</file>
		
        <file name="catalog/model/total/reward.php">
                <operation>
                        <search position="replace"><![CDATA[$points = $this->customer->getRewardPoints();]]></search>
							<add><![CDATA[
			if (isset($this->session->data['original_customer_id'])) {
				$points = $this->customer->getRewardPointsCustomerId($this->session->data['original_customer_id']);
			} else {
				$points = $this->customer->getRewardPoints();
			}
							]]></add>
                </operation>
                <operation>
                        <search position="replace"><![CDATA[$this->db->query("INSERT INTO " . DB_PREFIX . "customer_reward SET customer_id = '" . (int)$order_info['customer_id'] . "', description = '" . $this->db->escape(sprintf($this->language->get('text_order_id'), (int)$order_info['order_id'])) . "', points = '" . (float)-$points . "', date_added = NOW()");]]></search>
							<add><![CDATA[$this->db->query("INSERT INTO " . DB_PREFIX . "customer_reward SET customer_id = '" . (int)$order_info['customer_id'] . "', order_id = '" . (int)$order_info['order_id'] . "', description = '" . $this->db->escape(sprintf($this->language->get('text_order_id'), (int)$order_info['order_id'])) . "', points = '" . (float)-$points . "', date_added = NOW()");]]></add>
                </operation>
        </file>
		
        <file name="system/library/cart.php">
                <operation>
                        <search position="replace"><![CDATA[$options = unserialize(base64_decode($product[1]));]]></search>
							<add><![CDATA[
					$preoptions = unserialize(base64_decode($product[1]));
					if (!empty($preoptions)) {
						$options = $preoptions;
					} else {
						$options = array();
					}
						]]></add>
                </operation>
                <operation>
                        <search position="before"><![CDATA[$product_query =]]></search>
							<add><![CDATA[
				// Old Price product
				if (isset($product[3])) {
					$preprice = unserialize(base64_decode($product[3]));
					if ($preprice != '') {
						$oldprice = $preprice;
					} else {
						$oldprice = false;
					}
				} else {
					$oldprice = false;
				}
						]]></add>
                </operation>
                <operation>
                        <search position="before"><![CDATA[$price = $product_query->row['price'];]]></search>
							<add><![CDATA[
					// Old price product
					if ($oldprice) {
						$price = $oldprice;
					} else {
							]]></add>
                </operation>
                <operation>
                        <search position="before" offset="1"><![CDATA[$product_reward_query =]]></search>
							<add><![CDATA[
					} //Old price
							]]></add>
                </operation>
                <operation>
                        <search position="before"><![CDATA[$this->data[$key] = array(]]></search>
							<add><![CDATA[
					if ($oldprice) {
						$newprice = $price;
						$newtotal = $price * $quantity;
					} else {
						$newprice = $price + $option_price;
						$newtotal = ($price + $option_price) * $quantity;
					}
							]]></add>
                </operation>
				<operation>
						<search position="after"><![CDATA[$product_query->row['model'],]]></search>
							<add><![CDATA[						'sku'           => $product_query->row['sku'],
						'upc'           => $product_query->row['upc'],
						'ean'           => $product_query->row['ean'],
						'jan'           => $product_query->row['jan'],
						'isbn'          => $product_query->row['isbn'],
						'mpn'           => $product_query->row['mpn'],
						'location'      => $product_query->row['location'],]]></add>
				</operation>
				<operation>
						<search position="replace"><![CDATA[=> ($price + $option_price),]]></search>
							<add><![CDATA[=> $newprice,]]></add>
				</operation>
				<operation>
						<search position="replace"><![CDATA[=> ($price + $option_price) * $quantity,]]></search>
							<add><![CDATA[=> $newtotal,]]></add>
				</operation>
				<operation>
						<search position="replace"><![CDATA[public function add]]></search>
							<add><![CDATA[public function noadd]]></add>
				</operation>
                <operation>
                        <search position="before"><![CDATA[public function update]]></search>
							<add><![CDATA[
  	public function add($product_id, $qty = 1, $option = array(), $profile_id = '', $price = '') {
      	$key = (int)$product_id . ':' . base64_encode(serialize($option)) . ':' . base64_encode(serialize($profile_id)) . ':' . base64_encode(serialize($price)) . ':';

		if ((int)$qty && ((int)$qty > 0)) {
			if (!isset($this->session->data['cart'][$key])) {
				$this->session->data['cart'][$key] = (int)$qty;
			} else {
				$this->session->data['cart'][$key] += (int)$qty;
			}
		}

		$this->data = array();
	}
							]]></add>
                </operation>
        </file>
		
		<file name="admin/model/catalog/product.php">
                <operation>
                        <search position="replace" offset="2"><![CDATA[public function getProduct($product_id) {]]></search>
							<add><![CDATA[
	public function getOrderProductDiscounts($product_id, $customer_group_id) {
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_discount WHERE product_id = '" . (int)$product_id . "' AND customer_group_id = '" . (int)$customer_group_id . "' AND ((date_start = '0000-00-00' OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) ORDER BY priority ASC LIMIT 1");
		return $query->rows;		
	}
	
	public function getCatalogProducts($data = array()) {
		$sql = "SELECT p.*, pd.*";
		
		if (isset($data['customer_group_id']) && !empty($data['customer_group_id'])) {
			$sql .= ", (SELECT pd2.price FROM " . DB_PREFIX . "product_discount pd2 WHERE pd2.product_id = p.product_id AND pd2.customer_group_id = '" . (int)$data['customer_group_id'] . "' AND pd2.quantity = '1' AND ((pd2.date_start = '0000-00-00' OR pd2.date_start < NOW()) AND (pd2.date_end = '0000-00-00' OR pd2.date_end > NOW())) ORDER BY pd2.priority ASC, pd2.price ASC LIMIT 1) AS discount, (SELECT ps.price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$data['customer_group_id'] . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1) AS special, (SELECT pr.points FROM " . DB_PREFIX . "product_reward pr WHERE pr.product_id = p.product_id AND customer_group_id = '" . (int)$data['customer_group_id'] . "') AS reward";			
		}

		$sql .= " FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id)";

		$sql .= " WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "'"; 

		if (isset($data['filter_name']) && !empty($data['filter_name'])) {
			$sql .= " AND LCASE(pd.name) LIKE '%" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "%'";
		}

		if (isset($data['filter_model']) && !empty($data['filter_model'])) {
			$sql .= " AND LCASE(p.model) LIKE '%" . $this->db->escape(utf8_strtolower($data['filter_model'])) . "%'";
		}

		if (isset($data['filter_sku']) && !empty($data['filter_sku'])) {
			$sql .= " AND LCASE(p.sku) LIKE '%" . $this->db->escape(utf8_strtolower($data['filter_sku'])) . "%'";
		}

		if (isset($data['filter_upc']) && !empty($data['filter_upc'])) {
			$sql .= " AND LCASE(p.upc) LIKE '%" . $this->db->escape(utf8_strtolower($data['filter_upc'])) . "%'";
		}
		
		if (isset($data['filter_ean']) && !empty($data['filter_ean'])) {
			$sql .= " AND LCASE(p.ean) LIKE '%" . $this->db->escape(utf8_strtolower($data['filter_ean'])) . "%'";
		}
		
		if (isset($data['filter_jan']) && !empty($data['filter_jan'])) {
			$sql .= " AND LCASE(p.jan) LIKE '%" . $this->db->escape(utf8_strtolower($data['filter_jan'])) . "%'";
		}
		
		if (isset($data['filter_isbn']) && !empty($data['filter_isbn'])) {
			$sql .= " AND LCASE(p.isbn) LIKE '%" . $this->db->escape(utf8_strtolower($data['filter_isbn'])) . "%'";
		}
		
		if (isset($data['filter_mpn']) && !empty($data['filter_mpn'])) {
			$sql .= " AND LCASE(p.mpn) LIKE '%" . $this->db->escape(utf8_strtolower($data['filter_mpn'])) . "%'";
		}
		
		if (isset($data['filter_location']) && !empty($data['filter_location'])) {
			$sql .= " AND LCASE(p.location) LIKE '%" . $this->db->escape(utf8_strtolower($data['filter_location'])) . "%'";
		}
		
		if (isset($data['filter_quantity']) && !is_null($data['filter_quantity'])) {
			$sql .= " AND p.quantity = '" . $this->db->escape($data['filter_quantity']) . "'";
		}

		if (isset($data['filter_status']) && !is_null($data['filter_status'])) {
			$sql .= " AND p.status = '" . (int)$data['filter_status'] . "'";
		}
		
		if (isset($data['filter_pid']) && !empty($data['filter_pid'])) {
			$sql .= " AND p.product_id = '" . (int)$data['filter_pid'] . "'";
		}

		$sql .= " GROUP BY p.product_id";

		$sort_data = array('pd.name','p.model','p.sku','p.upc','p.ean','p.jan','p.isbn','p.mpn','p.location','p.price','p.quantity','p.status','p.sort_order');

		if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
			$sql .= " ORDER BY " . $data['sort'];
		} else {
			$sql .= " ORDER BY pd.name";
		}

		if (isset($data['order']) && ($data['order'] == 'DESC')) {
			$sql .= " DESC";
		} else {
			$sql .= " ASC";
		}

		if (isset($data['start']) || isset($data['limit'])) {
			if ($data['start'] < 0) {
				$data['start'] = 0;
			}

			if ($data['limit'] < 1) {
				$data['limit'] = 20;
			}

			$sql .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
		}

		$query = $this->db->query($sql);

		return $query->rows;
	}

	public function getProduct($product_id, $customer_group_id = false) {
		if ($customer_group_id) {
			$query = $this->db->query("SELECT DISTINCT *, (SELECT keyword FROM " . DB_PREFIX . "url_alias WHERE query = 'product_id=" . (int)$product_id . "') AS keyword, (SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$customer_group_id . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1) AS special, (SELECT points FROM " . DB_PREFIX . "product_reward pr WHERE pr.product_id = p.product_id AND customer_group_id = '" . (int)$customer_group_id . "') AS reward FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.product_id = '" . (int)$product_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "'");
		} else {
			$query = $this->db->query("SELECT DISTINCT *, (SELECT keyword FROM " . DB_PREFIX . "url_alias WHERE query = 'product_id=" . (int)$product_id . "') AS keyword FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.product_id = '" . (int)$product_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "'");
		}
							]]></add>
                </operation>

                <operation error="skip">
                        <search position="replace"><![CDATA[AND od.language_id = '" . (int)$this->config->get('config_language_id') . "'");]]></search>
							<add><![CDATA[AND od.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY o.sort_order");]]></add>
                </operation>

                <operation error="skip">
                        <search position="replace"><![CDATA[$product_option_value_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_value WHERE product_option_id = '" . (int)$product_option['product_option_id'] . "'");]]></search>
							<add><![CDATA[$product_option_value_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_value pov LEFT JOIN " . DB_PREFIX . "option_value ov ON (pov.option_value_id = ov.option_value_id) LEFT JOIN " . DB_PREFIX . "option_value_description ovd ON (ov.option_value_id = ovd.option_value_id) WHERE pov.product_id = '" . (int)$product_id . "' AND pov.product_option_id = '" . (int)$product_option['product_option_id'] . "' AND ovd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY ov.sort_order");]]></add>
                </operation>

                <operation>
                        <search position="after"><![CDATA[$product_option_value['option_value_id'],]]></search>
							<add><![CDATA[					'name'                    => $product_option_value['name'],]]></add>
                </operation>
		</file>
		
		<file name="catalog/model/total/shipping.php">
                <operation>
                        <search position="replace"><![CDATA[$this->session->data['shipping_method']['title'],]]></search>
							<add><![CDATA[strip_tags($this->session->data['shipping_method']['title']),]]></add>
                </operation>
		</file>
		
		<file name="catalog/model/checkout/order.php">
                <operation>
                        <search position="after"><![CDATA[foreach ($data['products'] as $product) {]]></search>
							<add><![CDATA[
			$piquery = $this->db->query("SELECT * FROM `" . DB_PREFIX . "product` WHERE product_id = '" . (int)$product['product_id'] . "'");
			if ($piquery->num_rows) {
				$sku = $piquery->row['sku'];
				$upc = $piquery->row['upc'];
				$ean = $piquery->row['ean'];
				$jan = $piquery->row['jan'];
				$isbn = $piquery->row['isbn'];
				$mpn = $piquery->row['mpn'];
				$location = $piquery->row['location'];
			} else {
				$sku = '';
				$upc = '';
				$ean = '';
				$jan = '';
				$isbn = '';
				$mpn = '';
				$location = '';
			}

			if (isset($product['sku'])) {
				$sku = $product['sku'];
			}
			if (isset($product['upc'])) {
				$upc = $product['upc'];
			}
			if (isset($product['ean'])) {
				$ean = $product['ean'];
			}
			if (isset($product['jan'])) {
				$jan = $product['jan'];
			}
			if (isset($product['isbn'])) {
				$isbn = $product['isbn'];
			}
			if (isset($product['mpn'])) {
				$mpn = $product['mpn'];
			}
			if (isset($product['location'])) {
				$location = $product['location'];
			}
							]]></add>
                </operation>
                <operation>
                        <search position="replace"><![CDATA[model = '" . $this->db->escape($product['model']) . "']]></search>
							<add><![CDATA[model = '" . $this->db->escape($product['model']) . "', sku = '" . $this->db->escape($sku) . "', upc = '" . $this->db->escape($upc) . "', ean = '" . $this->db->escape($ean) . "', jan = '" . $this->db->escape($jan) . "', isbn = '" . $this->db->escape($isbn) . "', mpn = '" . $this->db->escape($mpn) . "', location = '" . $this->db->escape($location) . "']]></add>
                </operation>
		</file>
		
		<file name="system/library/customer.php">
                <operation>
                        <search position="before"><![CDATA[public function getRewardPoints]]></search>
							<add><![CDATA[
  	public function getRewardPointsCustomerId($customer_id) {
		$query = $this->db->query("SELECT SUM(points) AS total FROM `" . DB_PREFIX . "customer_reward` WHERE `customer_id` = '" . (int)$customer_id . "'");
	
		return $query->row['total'];
  	}
							]]></add>
                </operation>
		</file>
</modification>